var storeifyValidate = {};var storeify_lang = "";var storeifyapps_filesizeval = "MjU2MjA="; var storeifyapps_maxcount = "NQ=="; var storeify_formbuilder_html= "{"shopify_domain":"sofanacaixa.myshopify.com","items":[{"id":18545,"type":3,"html":"<link rel='stylesheet' href='https:\/\/fonts.googleapis.com\/css?family=Fira Sans' rel='stylesheet' media='all' \/>\r\n<script type=\"text\/javascript\">\r\n\tvar storeifyFrombuilder = storeifyFrombuilder || {}; storeifyFrombuilder.frmCallback_18545 = function(data){setTimeout(function() {\r\n    window.location.href = \"\/\";\r\n}, 10000);};\r\n<\/script>\r\n<style type=\"text\/css\">\r\n\t.storeify-foooter-frm,.storeify-body-frm,.storeify-header-frm{\r\n\t\twidth: 100%;\r\n\t\tfloat: left;\r\n\t}\r\n    .storeify-formbuilder .storeify-display-icon .storeify-input-control.storeify-no-icon{\r\n    \tpadding-left: 15px !important;\r\n    }\r\n\r\n\t\t\/*css*\/\r\n\t#storeify_content_formbuilder_18545{\r\n\t\tdisplay:inline-block;width:100%; \t\tfont-size:14px !important;\r\n\t\tcolor: #000000;\r\n\t\tborder-radius: 8px !important;\r\n\t\t\t\tfont-family: 'Fira Sans' !important;\r\n\t\t;\r\n\t\tborder: #FFFFFF solid 0px !important;\r\n\t}\r\n\t#storeify_content_formbuilder_18545.info_box_enabled{display: flex;}\r\n\t#storeify_content_formbuilder_18545 .storeify-notes,\r\n\t#storeify_content_formbuilder_18545 .storeify-text{\r\n\t\tcolor: #000000;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .storeify-label-control,\r\n\t#storeify_content_formbuilder_18545 .storeify-checkbox-label,\r\n\t#storeify_content_formbuilder_18545 .storeify-radio-label,\r\n\t#storeify_content_formbuilder_18545 .storeify-input-control{\r\n\t\tfont-size:14px;\r\n\t\ttext-transform:none;\r\n\t\tfont-weight: normal;\r\n\t}\r\n\t\r\n\t#storeify_content_formbuilder_18545 .storeify-label-control,\r\n\t#storeify_content_formbuilder_18545 .storeify-radio-label,\r\n\t#storeify_content_formbuilder_18545 .storeify-checkbox-label{\r\n\t\tcolor: #000000;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .storeify-form-checkbox .storeify-checkbox-input:checked ~ .storeify-checkbox-label::after,\r\n\t#storeify_content_formbuilder_18545 .storeify-form-radio .storeify-radio-input:checked ~ .storeify-radio-label::after{\r\n\t\tbackground-color: #000000 !important;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .storeify-formbuilder-mes,\r\n\t#storeify_content_formbuilder_18545 .storeify-frm-group .storeify-input-control,\r\n\t#storeify_content_formbuilder_18545 .storeify-frm-group .storeify-form-checkbox .storeify-checkbox-label::before,\r\n\t#storeify_content_formbuilder_18545 .storeify-frm-group .storeify-form-radio .storeify-radio-label::before{\r\n\t\tborder-color: #333333;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .storeify-frm-group input.storeify-input-control,\r\n\t#storeify_content_formbuilder_18545 .storeify-frm-group select.storeify-input-control{\r\n\t\theight: 36px;\r\n\t\tline-height: 36px;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .storeify-submit-btn{\r\n\t\tfont-size: 14px; \r\n\t\theight: 38px;\r\n\t\tline-height: 38px;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .storeify-formbuilder-mes,\r\n\t#storeify_content_formbuilder_18545 .storeify-input-control.storeify-textarea,\r\n\t#storeify_content_formbuilder_18545 .storeify-input-control.storeify-email,\r\n\t#storeify_content_formbuilder_18545 .storeify-input-control.storeify-select,\r\n\t#storeify_content_formbuilder_18545 .storeify-input-control.storeify-input-text,\r\n\t#storeify_content_formbuilder_18545 .storeify-input-control.storeify-datetime{\r\n\t\tbackground-color:rgba(255,255,255) !important;\r\n\t\tcolor: #333333 !important;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .storeify-formbuilder-mes{\r\n\t\tline-height: 1;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .storeify-formbuilder-mes{\r\n\t\tline-height: 1.2;\r\n\t\ttext-align: center;\r\n\t\tposition: absolute;\r\n\t\ttop:20%;\r\n\t\tleft: 25px;\r\n\t\tright: 25px;\r\n\t\tpadding: 25px;\r\n\t\tborder-radius: 20px;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .storeify-div-select .storeify-field-icon,\r\n\t#storeify_content_formbuilder_18545 .storeify-div-input .storeify-field-icon{\r\n\t\tcolor: #333333;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .storeify-display-icon .storeify-label-control .storeify-field-icon {\r\n\t    font-size: inherit;\r\n\t    line-height: 1;\r\n\t    vertical-align: middle;\r\n\t    position: static;\r\n\t    display: inline-block;\r\n\t    margin-right: 5px;\r\n\t    margin-left: 1px;\r\n\t    margin-top: -0.8%;\r\n\t}\r\n\t\t#storeify_content_formbuilder_18545{\r\n\t\tposition: relative;\r\n\t\tcolor: #FFFFFF;\r\n\t\tbackground-color: #FFFFFF;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .storeify_bg_view{\r\n\t\t\t\tbackground-position: center;\r\n\t\tbackground-repeat: no-repeat;\r\n\t\tbackground-size: cover;\r\n\t\topacity: 1;\r\n\t\tposition:absolute;\r\n\t\tleft:0;\r\n\t\ttop:0;\r\n\t\twidth:100%;\r\n\t\theight:100%;\r\n\t\tborder-radius: 8px;\r\n\t\tz-index:1;\r\n\t\tdisplay:block;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 > .storeifyapps-form{\r\n\t\tz-index: 2;\r\n\t\tposition: relative;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .storeify-frm-close{\r\n\t\tcolor:#000000;\r\n\t\tz-index:9;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .storeify-title-frm{\r\n\t\tcolor:#000000 !important;\r\n\t\tfont-size: 16px !important;\r\n\t\tline-height: 1;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .storeify-sub-title-frm{\r\n\t\tcolor:#000000 !important;\r\n\t\tfont-size: 14px !important;\r\n\t}\r\n\t\t#storeify-trigger-popup-18545{\r\n\t\tcolor: #FFFFFF !important;\r\n\t\tbackground-color: #000000 !important;\r\n\t\tfont-size: 15px !important;\r\n\t\tmin-height: 30px;\r\n\t}\r\n\t.storeify-btn-trigger-popup.storeify-btn-position-1{\r\n\t\tbottom: 0;\r\n\t\tright: 25px;\r\n\t   \r\n\t}\r\n\t.storeify-btn-trigger-popup.storeify-btn-position-2{\r\n\t\tbottom: 0;\r\n\t\tleft: 25px;\r\n\t}\r\n\t.storeify-btn-trigger-popup.storeify-btn-position-3{\r\n\t\tleft: auto;\r\n\t    right: 0;\r\n\t    transform: translate(-31px, 0) rotate(-90deg);\r\n\t    transform-origin: right top 0;\r\n\t\t-moz-transform: translate(-31px, 0) rotate(-90deg);\r\n\t\t-moz-transform-origin: right top 0;\r\n\t\t-webkit-transform: translate(-31px, 0) rotate(-90deg);\r\n\t\t-webkit-transform-origin: right top 0;\r\n\t    bottom: auto;\r\n\t    top: 35%;\r\n\t}\r\n\t.storeify-btn-trigger-popup.storeify-btn-position-4{\r\n\t\tleft: 0;\r\n\t    right: auto;\r\n\t    transform: translate(31px, 0) rotate(90deg);\r\n\t    transform-origin: left top 0;\r\n\t\t-moz-transform: translate(31px, 0) rotate(90deg);\r\n\t\t-moz-transform-origin: left top 0;\r\n\t\t-webkit-transform: translate(31px, 0) rotate(90deg);\r\n\t\t-webkit-transform-origin: left top 0;\r\n\t    bottom: auto;\r\n\t    top: 35%;\r\n\t   \r\n\t}\r\n\t.storeify-btn-trigger-popup.storeify-btn-style-1{\r\n\t\ttransform: none !important;\r\n\t}\r\n\t\/*#storeify_content_formbuilder_18545 .storeify-select-arrow{\r\n\t\tborder-top: 5px solid #333333;\r\n\t\tborder-top-color: #333333;\r\n\t}*\/\r\n\t#storeify_content_formbuilder_18545 .storeify-submit-btn{\r\n\t\tcolor: #FFFFFF !important;\r\n\t\tbackground-color: #00AD64 !important\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .storeify-input-file .btn-ctf-attach{\r\n\t\tcolor: #000000 !important;\r\n\t}\r\n\t#form_attach_file_success_18545 ul{\r\n\t\tdisplay: block;\r\n\t\tlist-style: none;\r\n\t\tpadding: 7px 15px;\r\n\t\tbackground-color:rgba(255,255,255) !important;\r\n\t\tline-height: 1;\r\n\t\tcolor: #333333 !important;\r\n\t\tborder: 1px solid #333333;\r\n\t\tborder-radius: 5px;\r\n\t\tmargin:5px 0;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .file-error-message{\r\n\t\tmargin:5px 0 !important;\r\n\t\tpadding: 7px 15px !important;\r\n\t}\r\n\t#storeify_content_formbuilder_18545 .kv-error-close{\r\n\t\tmargin-top: -5px;\r\n\t}\r\n\t#form_attach_file_success_18545 ul li{\r\n\t\tdisplay: block;\r\n\t\tpadding: 3px 15px 3px 0;\r\n\t\tposition: relative;\r\n\t}\r\n\t#form_attach_file_success_18545 ul .fa-times{\r\n\t    width: 15px;\r\n\t    height: 15px;\r\n\t    position: absolute;\r\n\t    text-align: center;\r\n\t    line-height: 15px;\r\n\t    top:50%;\r\n\t    margin-top: -7px;\r\n\t    right: 0;\r\n\t    display: block;\r\n\t}\r\n\t\t@media  only screen and (max-width: 480px){\r\n\t\t#storeify-trigger-popup-18545{\r\n\t\t\tdisplay: none !important;\r\n\t\t}\r\n\t}\r\n\t\t\tbody .storeify-hide{display: none !important;}\r\n\t#storeify-light-modal-18545.storeify-light-modal .storeify-light-modal-content,\r\n\t#storeify-light-modal-18545.storeify-bubble-modal .storeify-light-modal-content{\r\n\t\twidth: 650px;\r\n\t}\r\n\t@media  screen and (max-width: 660px){\r\n\t\t#storeify-light-modal-18545.storeify-light-modal .storeify-light-modal-content,\r\n\t\t#storeify-light-modal-18545.storeify-bubble-modal .storeify-light-modal-content{\r\n\t\t\twidth: auto;\r\n\t\t}\r\n\t}\r\n\t@media  screen and (max-width: 640px){\r\n\t\t#storeify_content_formbuilder_18545.storeify-formbuilder.info_box_enabled,\r\n\t\t.storeify-light-modal.target{display: block;}\r\n\t\t.storeify-light-modal .storeify-light-modal-content{margin: 0 15px;}\r\n\t\t.storeifyapps-form-18545{width: 100%;float: left;padding: 20px 25px 5px 25px;}\r\n\t\t.storeifyapps-info-18545{width: 100%;float: left;padding: 10px 25px 15px 25px;}\r\n\t\t #storeify_content_formbuilder_18545.storeify-formbuilder.info_box_enabled{overflow-y:auto;} \t}\r\n\t\t#storeify-formbuilder-view-18545{\r\n\t\twidth: 650px;\r\n\t\tmax-width: 100%;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\t\t\t\t\t\t\r\n<\/style>\r\n<div class=\"storeify-formbuilder storeify-frm-type-3  bootstrap-storeifyapps storeify-position-0 \" id=\"storeify_content_formbuilder_18545\">\r\n\t\t\t<div class=\"storeifyapps-form storeifyapps-form-18545\">\r\n\t\t<form class=\"storeify-form-action needs-validation \" id=\"storeify_form_action_18545\" action=\"https:\/\/cf.storeify.app\/formbuilder-send\" method=\"POST\">\r\n\t\t\t<input type=\"hidden\" name=\"_token\" value=\"4b0JExzHTL6OeW10JnowylLt098w3y9Krz965b6m\">\r\n\t\t\t<input type=\"hidden\" name=\"id\" value=\"18545\">\r\n\t\t\t<input type=\"hidden\" name=\"shopify_domain\" value=\"sofanacaixa.myshopify.com\">\r\n\t\t\t<input type=\"hidden\" name=\"shop_email\" value=\"sistemas@ecoflamegarden.com.br\">\r\n\t\t\t<input type=\"hidden\" name=\"send_to\" value=\"sistemas@ecoflamegarden.com.br\">\r\n\t\t\t<input type=\"hidden\" name=\"shop_name\" value=\"Sof\u00e1 na Caixa\">\r\n\t\t\t<input type=\"hidden\" name=\"submit_from\" class=\"submit_from\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"storeify-header-frm storeify-header-frm-text-1 storeify-text-align-1\">\r\n\t\t\t\t\t\t\t\t<div class=\"storeify-title-frm\">\r\n\t\t\t\t\tQueremos entender um pouco sobre voc\u00ea\r\n\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-sub-title-frm\">\r\n\t\t\t\t\tPor onde voc\u00ea veio at\u00e9 finalizar a compra do produto?\r\n\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t<\/div><!--end header-->\r\n\t\t\t\t\t\t<div class=\"storeify-body-frm  storeify-label-outline  storeify-input-style-2 \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-multi-input storeify-col-1 out-storeifyInput_d65cb89e8e3a \"  data-default=\"\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t                    \t                    <div class=\"storeify-div-input storeify-div-input-type-radio\"> \r\n\t                    \t                    \t\t                        <div class=\"storeify-form-radio choose_display_2\">\r\n\t                        \t\t                        \t\t<input class=\"storeify-radio-input \" type=\"radio\" value=\"Anuncio nas redes sociais\" id=\"storeifyInput_d65cb89e8e3a_0\" name=\"storeifyInput_d65cb89e8e3a\"    \/>\r\n\t                        \t\t                            <label class=\"storeify-radio-label\" for=\"storeifyInput_d65cb89e8e3a_0\">Anuncio nas redes sociais<\/label>\r\n\t                        <\/div>\r\n\t                        \t                        <div class=\"storeify-form-radio choose_display_2\">\r\n\t                        \t\t                        \t\t<input class=\"storeify-radio-input \" type=\"radio\" value=\"Pesquisa pr\u00f3pria\" id=\"storeifyInput_d65cb89e8e3a_1\" name=\"storeifyInput_d65cb89e8e3a\"    \/>\r\n\t                        \t\t                            <label class=\"storeify-radio-label\" for=\"storeifyInput_d65cb89e8e3a_1\">Pesquisa pr\u00f3pria<\/label>\r\n\t                        <\/div>\r\n\t                        \t                        <div class=\"storeify-form-radio choose_display_2\">\r\n\t                        \t\t                        \t\t<input class=\"storeify-radio-input \" type=\"radio\" value=\"Indica\u00e7\u00e3o de um amigo ou familiar\" id=\"storeifyInput_d65cb89e8e3a_2\" name=\"storeifyInput_d65cb89e8e3a\"    \/>\r\n\t                        \t\t                            <label class=\"storeify-radio-label\" for=\"storeifyInput_d65cb89e8e3a_2\">Indica\u00e7\u00e3o de um amigo ou familiar<\/label>\r\n\t                        <\/div>\r\n\t                        \t                        <div class=\"storeify-form-radio choose_display_2\">\r\n\t                        \t\t                        \t\t<input class=\"storeify-radio-input \" type=\"radio\" value=\"Rede social da marca\" id=\"storeifyInput_d65cb89e8e3a_3\" name=\"storeifyInput_d65cb89e8e3a\"    \/>\r\n\t                        \t\t                            <label class=\"storeify-radio-label\" for=\"storeifyInput_d65cb89e8e3a_3\">Rede social da marca<\/label>\r\n\t                        <\/div>\r\n\t                        \t                        <div class=\"storeify-form-radio choose_display_2\">\r\n\t                        \t\t                        \t\t<input class=\"storeify-radio-input \" type=\"radio\" value=\"Afiliados\" id=\"storeifyInput_d65cb89e8e3a_4\" name=\"storeifyInput_d65cb89e8e3a\"    \/>\r\n\t                        \t\t                            <label class=\"storeify-radio-label\" for=\"storeifyInput_d65cb89e8e3a_4\">Afiliados<\/label>\r\n\t                        <\/div>\r\n\t                        \t                        <div class=\"storeify-form-radio choose_display_2\">\r\n\t                        \t\t                        \t\t<input class=\"storeify-radio-input \" type=\"radio\" value=\"Influenciador\" id=\"storeifyInput_d65cb89e8e3a_5\" name=\"storeifyInput_d65cb89e8e3a\"    \/>\r\n\t                        \t\t                            <label class=\"storeify-radio-label\" for=\"storeifyInput_d65cb89e8e3a_5\">Influenciador<\/label>\r\n\t                        <\/div>\r\n\t                        \t                    \t                \t<\/div>\r\n\t                \t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-col-1 out-storeifyInput_d048859e-9d93-4ede-8072-db80708a9eba \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"storeify-label-control\" for=\"storeifyInput_d048859e-9d93-4ede-8072-db80708a9eba\">Outro<\/label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-div-input storeify-div-input-type-input-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\" storeify-no-icon  storeify-input-control storeify-input-text \" placeholder=\"Ex: Pinterest, Revista, Forbes...\" name=\"storeifyInput_d048859e-9d93-4ede-8072-db80708a9eba\" id=\"storeifyInput_d048859e-9d93-4ede-8072-db80708a9eba\" data-default=\"\" value=\"\"   >\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"validation_rules\" class=\"validation_rules\" value='{}'>\r\n\t\t\t\t<input type=\"hidden\" name=\"validation_mess\" class=\"validation_mess\" value='{}'>\r\n\t\t\t\t<script type=\"text\/javascript\">\r\n\t\t\t\t\tvar storeifyValidate = storeifyValidate||{};\r\n\t\t\t\t\tstoreifyValidate[18545] = {\r\n\t\t\t\t\t\t'rules' : {},\r\n\t\t\t\t\t\t'mes' : {},\r\n\t\t\t\t\t};\r\n\t\t\t\t<\/script>\r\n\t\t\t<\/div><!--end body-->\r\n\t\t\t<div class=\"storeify-foooter-frm storeify-text-align-1\">\r\n\t\t\t\t<button class=\"storeify-submit-frm storeify-submit-btn storeify-submit-style-2\" >Enviar<\/button>\r\n\t\t\t<\/div><!--end footer-->\r\n\t\t<\/form>\r\n\r\n\t\t<div class=\"storeify-formbuilder-mes\" style=\"display: none;\"><\/div>\r\n\t<\/div>\r\n\t\r\n\t\r\n<\/div>\r\n\r\n<script type=\"text\/javascript\">\r\njQuery(document).ready(function($){\r\nfunction checkinArray18545(value, array, type,logic){\r\n\t\tif(type == 'radio'){\r\n\t\t\tif(value != '' && $.inArray(value,array) != -1){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(type == 'checkbox'){\r\n\t\t\t$checked = 1;\r\n\t\t\tif(value.length > 0){\r\n\t\t\t\t$.each(value, function( i, val ) {\r\n\t\t\t\t \tif($.inArray(val,array) == -1){\r\n\t\t\t\t \t\t$checked = 0;\r\n\t\t\t\t \t\treturn false;\r\n\t\t\t\t \t}\r\n\r\n\t\t\t\t});\r\n\t\t\t\tif($checked == 1)\r\n\t\t\t\t\treturn true;\r\n\t\t\t\telse\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn logic;\r\n}\r\nfunction chekCompare18545(inputs,param,check){\r\n\tif(inputs.length > 0){\r\n\t\t$checked = 1;\r\n\t\t$.each(inputs, function( i, val ) {\r\n\t\t\tif(check == true){\r\n\t\t\t\tif(val < param){\r\n\t\t\t \t\tconsole.log(val +'<'+ param)\r\n\t\t\t \t\t$checked = 0;\r\n\t\t\t\t\treturn false;\r\n\t\t\t \t}\r\n\t\t\t}else{\r\n\t\t\t\tif(val > param){\r\n\t\t\t\t\tconsole.log(val +'>'+ param)\r\n\t\t\t \t\t$checked = 0;\r\n\t\t\t\t\treturn false;\r\n\t\t\t \t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif($checked == 1)\r\n\t\t\treturn true;\r\n\t\telse\r\n\t\t\treturn false;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n});\r\n<\/script>","show_all":1,"pages":[],"products":[],"collections":[],"step_enabled":0,"text_buton":{"next_button":"Next","previous_button":"Previous","submit_button":"Enviar"},"upload":{"upload":0,"attachfile_required":0,"upload_label":"Attach File","upload_url":"https:\/\/cf.storeify.app\/contact\/upload-file"}},{"id":18001,"type":3,"html":"<style type=\"text\/css\">\r\n\t.storeify-foooter-frm,.storeify-body-frm,.storeify-header-frm{\r\n\t\twidth: 100%;\r\n\t\tfloat: left;\r\n\t}\r\n    .storeify-formbuilder .storeify-display-icon .storeify-input-control.storeify-no-icon{\r\n    \tpadding-left: 15px !important;\r\n    }\r\n\r\n\t\t\/*css*\/\r\n\t#storeify_content_formbuilder_18001{\r\n\t\tdisplay:inline-block;width:100%; \t\tfont-size:12px !important;\r\n\t\tcolor: #282828;\r\n\t\tborder-radius: 10px !important;\r\n\t\t\t\tfont-family: inherit;\r\n\t\t;\r\n\t\tborder: #FFFFFF solid 0px !important;\r\n\t}\r\n\t#storeify_content_formbuilder_18001.info_box_enabled{display: flex;}\r\n\t#storeify_content_formbuilder_18001 .storeify-notes,\r\n\t#storeify_content_formbuilder_18001 .storeify-text{\r\n\t\tcolor: #282828;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .storeify-label-control,\r\n\t#storeify_content_formbuilder_18001 .storeify-checkbox-label,\r\n\t#storeify_content_formbuilder_18001 .storeify-radio-label,\r\n\t#storeify_content_formbuilder_18001 .storeify-input-control{\r\n\t\tfont-size:12px;\r\n\t\ttext-transform:none;\r\n\t\tfont-weight: normal;\r\n\t}\r\n\t\r\n\t#storeify_content_formbuilder_18001 .storeify-label-control,\r\n\t#storeify_content_formbuilder_18001 .storeify-radio-label,\r\n\t#storeify_content_formbuilder_18001 .storeify-checkbox-label{\r\n\t\tcolor: #282828;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .storeify-form-checkbox .storeify-checkbox-input:checked ~ .storeify-checkbox-label::after,\r\n\t#storeify_content_formbuilder_18001 .storeify-form-radio .storeify-radio-input:checked ~ .storeify-radio-label::after{\r\n\t\tbackground-color: #282828 !important;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .storeify-formbuilder-mes,\r\n\t#storeify_content_formbuilder_18001 .storeify-frm-group .storeify-input-control,\r\n\t#storeify_content_formbuilder_18001 .storeify-frm-group .storeify-form-checkbox .storeify-checkbox-label::before,\r\n\t#storeify_content_formbuilder_18001 .storeify-frm-group .storeify-form-radio .storeify-radio-label::before{\r\n\t\tborder-color: #D9D9D9;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .storeify-frm-group input.storeify-input-control,\r\n\t#storeify_content_formbuilder_18001 .storeify-frm-group select.storeify-input-control{\r\n\t\theight: 36px;\r\n\t\tline-height: 36px;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .storeify-submit-btn{\r\n\t\tfont-size: 14px; \r\n\t\theight: 36px;\r\n\t\tline-height: 36px;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .storeify-formbuilder-mes,\r\n\t#storeify_content_formbuilder_18001 .storeify-input-control.storeify-textarea,\r\n\t#storeify_content_formbuilder_18001 .storeify-input-control.storeify-email,\r\n\t#storeify_content_formbuilder_18001 .storeify-input-control.storeify-select,\r\n\t#storeify_content_formbuilder_18001 .storeify-input-control.storeify-input-text,\r\n\t#storeify_content_formbuilder_18001 .storeify-input-control.storeify-datetime{\r\n\t\tbackground-color:rgba(255,255,255) !important;\r\n\t\tcolor: #676768 !important;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .storeify-formbuilder-mes{\r\n\t\tline-height: 1;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .storeify-formbuilder-mes{\r\n\t\tline-height: 1.2;\r\n\t\ttext-align: center;\r\n\t\tposition: absolute;\r\n\t\ttop:20%;\r\n\t\tleft: 25px;\r\n\t\tright: 25px;\r\n\t\tpadding: 25px;\r\n\t\tborder-radius: 20px;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .storeify-div-select .storeify-field-icon,\r\n\t#storeify_content_formbuilder_18001 .storeify-div-input .storeify-field-icon{\r\n\t\tcolor: #676768;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .storeify-display-icon .storeify-label-control .storeify-field-icon {\r\n\t    font-size: inherit;\r\n\t    line-height: 1;\r\n\t    vertical-align: middle;\r\n\t    position: static;\r\n\t    display: inline-block;\r\n\t    margin-right: 5px;\r\n\t    margin-left: 1px;\r\n\t    margin-top: -0.8%;\r\n\t}\r\n\t\t#storeify_content_formbuilder_18001{\r\n\t\tposition: relative;\r\n\t\tcolor: #FFFFFF;\r\n\t\tbackground-color: #F6F6F6;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .storeify_bg_view{\r\n\t\t\t\tbackground-position: center;\r\n\t\tbackground-repeat: no-repeat;\r\n\t\tbackground-size: cover;\r\n\t\topacity: 1;\r\n\t\tposition:absolute;\r\n\t\tleft:0;\r\n\t\ttop:0;\r\n\t\twidth:100%;\r\n\t\theight:100%;\r\n\t\tborder-radius: 10px;\r\n\t\tz-index:1;\r\n\t\tdisplay:block;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 > .storeifyapps-form{\r\n\t\tz-index: 2;\r\n\t\tposition: relative;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .storeify-frm-close{\r\n\t\tcolor:#000000;\r\n\t\tz-index:9;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .storeify-title-frm{\r\n\t\tcolor:#000000 !important;\r\n\t\tfont-size: 24px !important;\r\n\t\tline-height: 1;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .storeify-sub-title-frm{\r\n\t\tcolor:#000000 !important;\r\n\t\tfont-size: 14px !important;\r\n\t}\r\n\t\t#storeify-trigger-popup-18001{\r\n\t\tcolor: #FFFFFF !important;\r\n\t\tbackground-color: #000000 !important;\r\n\t\tfont-size: 18px !important;\r\n\t\tmin-height: 30px;\r\n\t}\r\n\t.storeify-btn-trigger-popup.storeify-btn-position-1{\r\n\t\tbottom: 0;\r\n\t\tright: 25px;\r\n\t   \r\n\t}\r\n\t.storeify-btn-trigger-popup.storeify-btn-position-2{\r\n\t\tbottom: 0;\r\n\t\tleft: 25px;\r\n\t}\r\n\t.storeify-btn-trigger-popup.storeify-btn-position-3{\r\n\t\tleft: auto;\r\n\t    right: 0;\r\n\t    transform: translate(-34px, 0) rotate(-90deg);\r\n\t    transform-origin: right top 0;\r\n\t\t-moz-transform: translate(-34px, 0) rotate(-90deg);\r\n\t\t-moz-transform-origin: right top 0;\r\n\t\t-webkit-transform: translate(-34px, 0) rotate(-90deg);\r\n\t\t-webkit-transform-origin: right top 0;\r\n\t    bottom: auto;\r\n\t    top: 35%;\r\n\t}\r\n\t.storeify-btn-trigger-popup.storeify-btn-position-4{\r\n\t\tleft: 0;\r\n\t    right: auto;\r\n\t    transform: translate(34px, 0) rotate(90deg);\r\n\t    transform-origin: left top 0;\r\n\t\t-moz-transform: translate(34px, 0) rotate(90deg);\r\n\t\t-moz-transform-origin: left top 0;\r\n\t\t-webkit-transform: translate(34px, 0) rotate(90deg);\r\n\t\t-webkit-transform-origin: left top 0;\r\n\t    bottom: auto;\r\n\t    top: 35%;\r\n\t   \r\n\t}\r\n\t.storeify-btn-trigger-popup.storeify-btn-style-1{\r\n\t\ttransform: none !important;\r\n\t}\r\n\t\/*#storeify_content_formbuilder_18001 .storeify-select-arrow{\r\n\t\tborder-top: 5px solid #D9D9D9;\r\n\t\tborder-top-color: #D9D9D9;\r\n\t}*\/\r\n\t#storeify_content_formbuilder_18001 .storeify-submit-btn{\r\n\t\tcolor: #FFFFFF !important;\r\n\t\tbackground-color: #05BE70 !important\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .storeify-input-file .btn-ctf-attach{\r\n\t\tcolor: #000000 !important;\r\n\t}\r\n\t#form_attach_file_success_18001 ul{\r\n\t\tdisplay: block;\r\n\t\tlist-style: none;\r\n\t\tpadding: 7px 15px;\r\n\t\tbackground-color:rgba(255,255,255) !important;\r\n\t\tline-height: 1;\r\n\t\tcolor: #676768 !important;\r\n\t\tborder: 1px solid #D9D9D9;\r\n\t\tborder-radius: 5px;\r\n\t\tmargin:5px 0;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .file-error-message{\r\n\t\tmargin:5px 0 !important;\r\n\t\tpadding: 7px 15px !important;\r\n\t}\r\n\t#storeify_content_formbuilder_18001 .kv-error-close{\r\n\t\tmargin-top: -5px;\r\n\t}\r\n\t#form_attach_file_success_18001 ul li{\r\n\t\tdisplay: block;\r\n\t\tpadding: 3px 15px 3px 0;\r\n\t\tposition: relative;\r\n\t}\r\n\t#form_attach_file_success_18001 ul .fa-times{\r\n\t    width: 15px;\r\n\t    height: 15px;\r\n\t    position: absolute;\r\n\t    text-align: center;\r\n\t    line-height: 15px;\r\n\t    top:50%;\r\n\t    margin-top: -7px;\r\n\t    right: 0;\r\n\t    display: block;\r\n\t}\r\n\t\t\tbody .storeify-hide{display: none !important;}\r\n\t#storeify-light-modal-18001.storeify-light-modal .storeify-light-modal-content,\r\n\t#storeify-light-modal-18001.storeify-bubble-modal .storeify-light-modal-content{\r\n\t\twidth: 1300px;\r\n\t}\r\n\t@media  screen and (max-width: 1310px){\r\n\t\t#storeify-light-modal-18001.storeify-light-modal .storeify-light-modal-content,\r\n\t\t#storeify-light-modal-18001.storeify-bubble-modal .storeify-light-modal-content{\r\n\t\t\twidth: auto;\r\n\t\t}\r\n\t}\r\n\t@media  screen and (max-width: 1290px){\r\n\t\t#storeify_content_formbuilder_18001.storeify-formbuilder.info_box_enabled,\r\n\t\t.storeify-light-modal.target{display: block;}\r\n\t\t.storeify-light-modal .storeify-light-modal-content{margin: 0 15px;}\r\n\t\t.storeifyapps-form-18001{width: 100%;float: left;padding: 20px 25px 5px 25px;}\r\n\t\t.storeifyapps-info-18001{width: 100%;float: left;padding: 10px 25px 15px 25px;}\r\n\t\t #storeify_content_formbuilder_18001.storeify-formbuilder.info_box_enabled{overflow-y:auto;} \t}\r\n\t\t#storeify-formbuilder-view-18001{\r\n\t\twidth: 1300px;\r\n\t\tmax-width: 100%;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\t\t\t\t\t\t.storeify-formbuilder {\r\nfont-family: Inter;\r\n}\r\n<\/style>\r\n<div class=\"storeify-formbuilder storeify-frm-type-3  bootstrap-storeifyapps storeify-position-0 \" id=\"storeify_content_formbuilder_18001\">\r\n\t\t\t<div class=\"storeifyapps-form storeifyapps-form-18001\">\r\n\t\t<form class=\"storeify-form-action needs-validation \" id=\"storeify_form_action_18001\" action=\"https:\/\/cf.storeify.app\/formbuilder-send\" method=\"POST\">\r\n\t\t\t<input type=\"hidden\" name=\"_token\" value=\"4b0JExzHTL6OeW10JnowylLt098w3y9Krz965b6m\">\r\n\t\t\t<input type=\"hidden\" name=\"id\" value=\"18001\">\r\n\t\t\t<input type=\"hidden\" name=\"shopify_domain\" value=\"sofanacaixa.myshopify.com\">\r\n\t\t\t<input type=\"hidden\" name=\"shop_email\" value=\"sistemas@ecoflamegarden.com.br\">\r\n\t\t\t<input type=\"hidden\" name=\"send_to\" value=\"contato@sofanacaixa.com.br\">\r\n\t\t\t<input type=\"hidden\" name=\"shop_name\" value=\"Sof\u00e1 na Caixa\">\r\n\t\t\t<input type=\"hidden\" name=\"submit_from\" class=\"submit_from\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"storeify-header-frm storeify-header-frm-text-1 storeify-text-align-1\">\r\n\t\t\t\t\t\t\t\t<div class=\"storeify-title-frm\">\r\n\t\t\t\t\tInscreva-se abaixo\r\n\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div><!--end header-->\r\n\t\t\t\t\t\t<div class=\"storeify-body-frm  storeify-label-outline  storeify-input-style-2   storeify-display-icon \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-col-2 out-storeifyInput_name \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"storeify-label-control\" for=\"storeifyInput_name\">Nome<span class=\"storeify-required-text\">*<\/span><\/label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-div-input storeify-div-input-type-input-text\">\r\n\t\t\t\t\t\t\t <i class=\"storeify-field-icon fa fa-user-o\"><\/i> \t\t\t\t\t\t\t<input type=\"text\" class=\" storeify-input-control storeify-input-text inter name-field\" placeholder=\"Nome\" name=\"storeifyInput_name\" id=\"storeifyInput_name\" data-default=\"\" value=\"\"    required=\"required\" >\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-col-2 out-storeifyInput_2a57d3c3-33d8-46b5-890b-ebb73358d29c \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"storeify-label-control\" for=\"storeifyInput_2a57d3c3-33d8-46b5-890b-ebb73358d29c\">Sobrenome<span class=\"storeify-required-text\">*<\/span><\/label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-div-input storeify-div-input-type-input-text\">\r\n\t\t\t\t\t\t\t <i class=\"storeify-field-icon fa fa-user-o\"><\/i> \t\t\t\t\t\t\t<input type=\"text\" class=\" storeify-input-control storeify-input-text inter\" placeholder=\"Sobrenome\" name=\"storeifyInput_2a57d3c3-33d8-46b5-890b-ebb73358d29c\" id=\"storeifyInput_2a57d3c3-33d8-46b5-890b-ebb73358d29c\" data-default=\"\" value=\"\"    required=\"required\" >\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-col-2 out-storeifyInput_ec1ebbee-6933-4393-9e67-6905e0a008ab \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"storeify-label-control\" for=\"storeifyInput_ec1ebbee-6933-4393-9e67-6905e0a008ab\">Telefone<span class=\"storeify-required-text\">*<\/span><\/label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-div-input storeify-div-input-type-input-text\">\r\n\t\t\t\t\t\t\t <i class=\"storeify-field-icon fa fa-phone\"><\/i> \t\t\t\t\t\t\t<input type=\"text\" class=\" storeify-input-control storeify-input-text \" placeholder=\"Telefone\" name=\"storeifyInput_ec1ebbee-6933-4393-9e67-6905e0a008ab\" id=\"storeifyInput_ec1ebbee-6933-4393-9e67-6905e0a008ab\" data-default=\"\" value=\"\"    required=\"required\" >\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-col-2 out-storeifyInput_email \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"storeify-label-control\" for=\"storeifyInput_email\">Your Email<span class=\"storeify-required-text\">*<\/span><\/label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-div-input storeify-div-input-type-email\">\r\n\t\t\t\t\t\t\t <i class=\"storeify-field-icon fa fa-envelope-o\"><\/i> \t\t\t\t\t\t\t<input type=\"email\" class=\" storeify-input-control storeify-email \" placeholder=\"Your Email\" name=\"storeifyInput_email\" id=\"storeifyInput_email\"  data-default=\"\" value=\"\"   required=\"required\" >\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-col-2 out-storeifyInput_4ebf2bcb-327b-4c26-b80d-57ec09cbbb86 \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"storeify-label-control\" for=\"storeifyInput_4ebf2bcb-327b-4c26-b80d-57ec09cbbb86\">Estado<span class=\"storeify-required-text\">*<\/span><\/label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-div-input storeify-div-input-type-input-text\">\r\n\t\t\t\t\t\t\t <i class=\"storeify-field-icon fa fa-map-marker\"><\/i> \t\t\t\t\t\t\t<input type=\"text\" class=\" storeify-input-control storeify-input-text \" placeholder=\"Nome do Seu Estado\" name=\"storeifyInput_4ebf2bcb-327b-4c26-b80d-57ec09cbbb86\" id=\"storeifyInput_4ebf2bcb-327b-4c26-b80d-57ec09cbbb86\" data-default=\"\" value=\"\"    required=\"required\" >\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-col-2 out-storeifyInput_phone \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"storeify-label-control\" for=\"storeifyInput_phone\">Cidade<span class=\"storeify-required-text\">*<\/span><\/label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-div-input storeify-div-input-type-input-text\">\r\n\t\t\t\t\t\t\t <i class=\"storeify-field-icon fa fa-map-marker\"><\/i> \t\t\t\t\t\t\t<input type=\"text\" class=\" storeify-input-control storeify-input-text city-field\" placeholder=\"Nome da sua cidade\" name=\"storeifyInput_phone\" id=\"storeifyInput_phone\" data-default=\"\" value=\"\"    required=\"required\" >\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-multi-input storeify-col-1 out-storeifyInput_company \"  data-default=\"\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t                        <label class=\"storeify-label-control  storeify-no-icon \" for=\"storeifyInput_company\"> A sala em sua resid\u00eancia acomoda as dimens\u00f5es do sof\u00e1-cama aberto?<span class=\"storeify-required-text\">*<\/span><\/label>\r\n\t                    \t                    \t                    <div class=\"storeify-div-input storeify-div-input-type-radio\"> \r\n\t                    \t                    \t\t                        <div class=\"storeify-form-radio choose_display_1\">\r\n\t                        \t\t                        \t\t<input class=\"storeify-radio-input \" type=\"radio\" value=\"Sim\" id=\"storeifyInput_company_0\" name=\"storeifyInput_company\"    required=\"required\"  \/>\r\n\t                        \t\t                            <label class=\"storeify-radio-label\" for=\"storeifyInput_company_0\">Sim<\/label>\r\n\t                        <\/div>\r\n\t                        \t                        <div class=\"storeify-form-radio choose_display_1\">\r\n\t                        \t\t                        \t\t<input class=\"storeify-radio-input \" type=\"radio\" value=\"N\u00e3o\" id=\"storeifyInput_company_1\" name=\"storeifyInput_company\"    required=\"required\"  \/>\r\n\t                        \t\t                            <label class=\"storeify-radio-label\" for=\"storeifyInput_company_1\">N\u00e3o<\/label>\r\n\t                        <\/div>\r\n\t                        \t                    \t                \t<\/div>\r\n\t                \t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-multi-input storeify-col-1 out-storeifyInput_web \"  data-default=\"\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t                        <label class=\"storeify-label-control  storeify-no-icon \" for=\"storeifyInput_web\"> Voc\u00ea est\u00e1 dispon\u00edvel para gravar v\u00eddeos di\u00e1rios conforme solicitado?<span class=\"storeify-required-text\">*<\/span><\/label>\r\n\t                    \t                    \t                    <div class=\"storeify-div-input storeify-div-input-type-radio\"> \r\n\t                    \t                    \t\t                        <div class=\"storeify-form-radio choose_display_1\">\r\n\t                        \t\t                        \t\t<input class=\"storeify-radio-input video-radio\" type=\"radio\" value=\"Sim\" id=\"storeifyInput_web_0\" name=\"storeifyInput_web\"    required=\"required\"  \/>\r\n\t                        \t\t                            <label class=\"storeify-radio-label\" for=\"storeifyInput_web_0\">Sim<\/label>\r\n\t                        <\/div>\r\n\t                        \t                        <div class=\"storeify-form-radio choose_display_1\">\r\n\t                        \t\t                        \t\t<input class=\"storeify-radio-input video-radio\" type=\"radio\" value=\"N\u00e3o\" id=\"storeifyInput_web_1\" name=\"storeifyInput_web\"    required=\"required\"  \/>\r\n\t                        \t\t                            <label class=\"storeify-radio-label\" for=\"storeifyInput_web_1\">N\u00e3o<\/label>\r\n\t                        <\/div>\r\n\t                        \t                    \t                \t<\/div>\r\n\t                \t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-multi-input storeify-col-1 out-storeifyInput_subject \"  data-default=\"\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t                        <label class=\"storeify-label-control  storeify-no-icon \" for=\"storeifyInput_subject\"> Voc\u00ea est\u00e1 dispon\u00edvel para visitar a sede da Sof\u00e1 na Caixa em S\u00e3o Paulo, conforme necess\u00e1rio?<span class=\"storeify-required-text\">*<\/span><\/label>\r\n\t                    \t                    \t                    <div class=\"storeify-div-input storeify-div-input-type-radio\"> \r\n\t                    \t                    \t\t                        <div class=\"storeify-form-radio choose_display_1\">\r\n\t                        \t\t                        \t\t<input class=\"storeify-radio-input radio\" type=\"radio\" value=\"Sim\" id=\"storeifyInput_subject_0\" name=\"storeifyInput_subject\"    required=\"required\"  \/>\r\n\t                        \t\t                            <label class=\"storeify-radio-label\" for=\"storeifyInput_subject_0\">Sim<\/label>\r\n\t                        <\/div>\r\n\t                        \t                        <div class=\"storeify-form-radio choose_display_1\">\r\n\t                        \t\t                        \t\t<input class=\"storeify-radio-input radio\" type=\"radio\" value=\"N\u00e3o\" id=\"storeifyInput_subject_1\" name=\"storeifyInput_subject\"    required=\"required\"  \/>\r\n\t                        \t\t                            <label class=\"storeify-radio-label\" for=\"storeifyInput_subject_1\">N\u00e3o<\/label>\r\n\t                        <\/div>\r\n\t                        \t                    \t                \t<\/div>\r\n\t                \t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-multi-input storeify-col-1 out-storeifyInput_b4795a67-d717-4fba-9671-4f37933afcee \"  data-default=\"\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t                    \t                    <div class=\"storeify-div-input storeify-div-input-type-checkbox\"> \r\n\t                    \t                   \t\t\t                        <div class=\"storeify-form-checkbox choose_display_1\">\r\n\t                            <input class=\"storeify-checkbox-input ify-checkbox-storeifyInput_b4795a67-d717-4fba-9671-4f37933afcee checkbox-consent\" type=\"checkbox\" value=\"Ao clicar em Enviar, eu declaro que todas as informa\u00e7\u00f5es fornecidas s\u00e3o verdadeiras e que estou ciente das condi\u00e7\u00f5es de participa\u00e7\u00e3o, incluindo a cess\u00e3o de uso de imagem por tempo indeterminado.\" id=\"storeifyInput_b4795a67-d717-4fba-9671-4f37933afcee\" name=\"storeifyInput_b4795a67-d717-4fba-9671-4f37933afcee\"    required=\"required\"  \/>\r\n\t                            <label class=\"storeify-checkbox-label\" for=\"storeifyInput_b4795a67-d717-4fba-9671-4f37933afcee\">Ao clicar em Enviar, eu declaro que todas as informa\u00e7\u00f5es fornecidas s\u00e3o verdadeiras e que estou ciente das condi\u00e7\u00f5es de participa\u00e7\u00e3o, incluindo a cess\u00e3o de uso de imagem por tempo indeterminado.<\/label>\r\n\t                        <\/div>\r\n\t                    \t                \t<\/div>\r\n\t                \t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"validation_rules\" class=\"validation_rules\" value='{&quot;storeifyInput_email&quot;:{email: true,},}'>\r\n\t\t\t\t<input type=\"hidden\" name=\"validation_mess\" class=\"validation_mess\" value='{&quot;storeifyInput_name&quot;:{required:&quot;campo obrigat\u00f3rio&quot;,},&quot;storeifyInput_2a57d3c3-33d8-46b5-890b-ebb73358d29c&quot;:{required:&quot;campo obrigat\u00f3rio&quot;,},&quot;storeifyInput_ec1ebbee-6933-4393-9e67-6905e0a008ab&quot;:{required:&quot;campo obrigat\u00f3rio&quot;,},&quot;storeifyInput_email&quot;:{required:&quot;capo obrigat\u00f3rio&quot;,email:&quot;Por favor preencha um email v\u00e1lido&quot;,},&quot;storeifyInput_4ebf2bcb-327b-4c26-b80d-57ec09cbbb86&quot;:{required:&quot;campo obrigat\u00f3rio&quot;,},&quot;storeifyInput_phone&quot;:{required:&quot;campo obrigat\u00f3rio&quot;,},&quot;storeifyInput_company&quot;:{required:&quot;campo obrigat\u00f3rio&quot;,},&quot;storeifyInput_web&quot;:{required:&quot;campo obrigat\u00f3rio&quot;,},&quot;storeifyInput_subject&quot;:{required:&quot;campo obrigat\u00f3rio&quot;,},&quot;storeifyInput_b4795a67-d717-4fba-9671-4f37933afcee&quot;:{required:&quot;campo obrigat\u00f3rio&quot;,},}'>\r\n\t\t\t\t<script type=\"text\/javascript\">\r\n\t\t\t\t\tvar storeifyValidate = storeifyValidate||{};\r\n\t\t\t\t\tstoreifyValidate[18001] = {\r\n\t\t\t\t\t\t'rules' : {\"storeifyInput_email\":{email: true,},},\r\n\t\t\t\t\t\t'mes' : {\"storeifyInput_name\":{required:\"campo obrigat\u00f3rio\",},\"storeifyInput_2a57d3c3-33d8-46b5-890b-ebb73358d29c\":{required:\"campo obrigat\u00f3rio\",},\"storeifyInput_ec1ebbee-6933-4393-9e67-6905e0a008ab\":{required:\"campo obrigat\u00f3rio\",},\"storeifyInput_email\":{required:\"capo obrigat\u00f3rio\",email:\"Por favor preencha um email v\u00e1lido\",},\"storeifyInput_4ebf2bcb-327b-4c26-b80d-57ec09cbbb86\":{required:\"campo obrigat\u00f3rio\",},\"storeifyInput_phone\":{required:\"campo obrigat\u00f3rio\",},\"storeifyInput_company\":{required:\"campo obrigat\u00f3rio\",},\"storeifyInput_web\":{required:\"campo obrigat\u00f3rio\",},\"storeifyInput_subject\":{required:\"campo obrigat\u00f3rio\",},\"storeifyInput_b4795a67-d717-4fba-9671-4f37933afcee\":{required:\"campo obrigat\u00f3rio\",},},\r\n\t\t\t\t\t};\r\n\t\t\t\t<\/script>\r\n\t\t\t<\/div><!--end body-->\r\n\t\t\t<div class=\"storeify-foooter-frm storeify-text-align-2\">\r\n\t\t\t\t<button class=\"storeify-submit-frm storeify-submit-btn storeify-submit-style-3\" >Enviar<\/button>\r\n\t\t\t<\/div><!--end footer-->\r\n\t\t<\/form>\r\n\r\n\t\t<div class=\"storeify-formbuilder-mes\" style=\"display: none;\"><\/div>\r\n\t<\/div>\r\n\t\r\n\t\r\n<\/div>\r\n\r\n<script type=\"text\/javascript\">\r\njQuery(document).ready(function($){\r\nfunction checkinArray18001(value, array, type,logic){\r\n\t\tif(type == 'radio'){\r\n\t\t\tif(value != '' && $.inArray(value,array) != -1){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(type == 'checkbox'){\r\n\t\t\t$checked = 1;\r\n\t\t\tif(value.length > 0){\r\n\t\t\t\t$.each(value, function( i, val ) {\r\n\t\t\t\t \tif($.inArray(val,array) == -1){\r\n\t\t\t\t \t\t$checked = 0;\r\n\t\t\t\t \t\treturn false;\r\n\t\t\t\t \t}\r\n\r\n\t\t\t\t});\r\n\t\t\t\tif($checked == 1)\r\n\t\t\t\t\treturn true;\r\n\t\t\t\telse\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn logic;\r\n}\r\nfunction chekCompare18001(inputs,param,check){\r\n\tif(inputs.length > 0){\r\n\t\t$checked = 1;\r\n\t\t$.each(inputs, function( i, val ) {\r\n\t\t\tif(check == true){\r\n\t\t\t\tif(val < param){\r\n\t\t\t \t\tconsole.log(val +'<'+ param)\r\n\t\t\t \t\t$checked = 0;\r\n\t\t\t\t\treturn false;\r\n\t\t\t \t}\r\n\t\t\t}else{\r\n\t\t\t\tif(val > param){\r\n\t\t\t\t\tconsole.log(val +'>'+ param)\r\n\t\t\t \t\t$checked = 0;\r\n\t\t\t\t\treturn false;\r\n\t\t\t \t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif($checked == 1)\r\n\t\t\treturn true;\r\n\t\telse\r\n\t\t\treturn false;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n});\r\n<\/script>","show_all":1,"pages":[],"products":[],"collections":[],"step_enabled":0,"text_buton":{"next_button":"Next","previous_button":"Previous","submit_button":"Enviar"},"upload":{"upload":0,"attachfile_required":0,"upload_label":"Attach File","upload_url":"https:\/\/cf.storeify.app\/contact\/upload-file"}},{"id":18060,"type":3,"html":"<style type=\"text\/css\">\r\n\t.storeify-foooter-frm,.storeify-body-frm,.storeify-header-frm{\r\n\t\twidth: 100%;\r\n\t\tfloat: left;\r\n\t}\r\n    .storeify-formbuilder .storeify-display-icon .storeify-input-control.storeify-no-icon{\r\n    \tpadding-left: 15px !important;\r\n    }\r\n\r\n\t\t\/*css*\/\r\n\t#storeify_content_formbuilder_18060{\r\n\t\tdisplay:inline-block;width:100%; \t\tfont-size:12px !important;\r\n\t\tcolor: #282828;\r\n\t\tborder-radius: 0px !important;\r\n\t\t\t\tfont-family: inherit;\r\n\t\t;\r\n\t\tborder: #FFFFFF solid 0px !important;\r\n\t}\r\n\t#storeify_content_formbuilder_18060.info_box_enabled{display: flex;}\r\n\t#storeify_content_formbuilder_18060 .storeify-notes,\r\n\t#storeify_content_formbuilder_18060 .storeify-text{\r\n\t\tcolor: #282828;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .storeify-label-control,\r\n\t#storeify_content_formbuilder_18060 .storeify-checkbox-label,\r\n\t#storeify_content_formbuilder_18060 .storeify-radio-label,\r\n\t#storeify_content_formbuilder_18060 .storeify-input-control{\r\n\t\tfont-size:12px;\r\n\t\ttext-transform:none;\r\n\t\tfont-weight: normal;\r\n\t}\r\n\t\r\n\t#storeify_content_formbuilder_18060 .storeify-label-control,\r\n\t#storeify_content_formbuilder_18060 .storeify-radio-label,\r\n\t#storeify_content_formbuilder_18060 .storeify-checkbox-label{\r\n\t\tcolor: #282828;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .storeify-form-checkbox .storeify-checkbox-input:checked ~ .storeify-checkbox-label::after,\r\n\t#storeify_content_formbuilder_18060 .storeify-form-radio .storeify-radio-input:checked ~ .storeify-radio-label::after{\r\n\t\tbackground-color: #282828 !important;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .storeify-formbuilder-mes,\r\n\t#storeify_content_formbuilder_18060 .storeify-frm-group .storeify-input-control,\r\n\t#storeify_content_formbuilder_18060 .storeify-frm-group .storeify-form-checkbox .storeify-checkbox-label::before,\r\n\t#storeify_content_formbuilder_18060 .storeify-frm-group .storeify-form-radio .storeify-radio-label::before{\r\n\t\tborder-color: #D9D9D9;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .storeify-frm-group input.storeify-input-control,\r\n\t#storeify_content_formbuilder_18060 .storeify-frm-group select.storeify-input-control{\r\n\t\theight: 36px;\r\n\t\tline-height: 36px;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .storeify-submit-btn{\r\n\t\tfont-size: 12px; \r\n\t\theight: 36px;\r\n\t\tline-height: 36px;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .storeify-formbuilder-mes,\r\n\t#storeify_content_formbuilder_18060 .storeify-input-control.storeify-textarea,\r\n\t#storeify_content_formbuilder_18060 .storeify-input-control.storeify-email,\r\n\t#storeify_content_formbuilder_18060 .storeify-input-control.storeify-select,\r\n\t#storeify_content_formbuilder_18060 .storeify-input-control.storeify-input-text,\r\n\t#storeify_content_formbuilder_18060 .storeify-input-control.storeify-datetime{\r\n\t\tbackground-color:rgba(255,255,255) !important;\r\n\t\tcolor: #676768 !important;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .storeify-formbuilder-mes{\r\n\t\tline-height: 1;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .storeify-formbuilder-mes{\r\n\t\tline-height: 1.2;\r\n\t\ttext-align: center;\r\n\t\tposition: absolute;\r\n\t\ttop:20%;\r\n\t\tleft: 25px;\r\n\t\tright: 25px;\r\n\t\tpadding: 25px;\r\n\t\tborder-radius: 20px;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .storeify-div-select .storeify-field-icon,\r\n\t#storeify_content_formbuilder_18060 .storeify-div-input .storeify-field-icon{\r\n\t\tcolor: #676768;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .storeify-display-icon .storeify-label-control .storeify-field-icon {\r\n\t    font-size: inherit;\r\n\t    line-height: 1;\r\n\t    vertical-align: middle;\r\n\t    position: static;\r\n\t    display: inline-block;\r\n\t    margin-right: 5px;\r\n\t    margin-left: 1px;\r\n\t    margin-top: -0.8%;\r\n\t}\r\n\t\t#storeify_content_formbuilder_18060{\r\n\t\tposition: relative;\r\n\t\tcolor: #FFFFFF;\r\n\t\tbackground-color: #F9F9F9;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .storeify_bg_view{\r\n\t\t\t\tbackground-position: center;\r\n\t\tbackground-repeat: no-repeat;\r\n\t\tbackground-size: cover;\r\n\t\topacity: 1;\r\n\t\tposition:absolute;\r\n\t\tleft:0;\r\n\t\ttop:0;\r\n\t\twidth:100%;\r\n\t\theight:100%;\r\n\t\tborder-radius: 0px;\r\n\t\tz-index:1;\r\n\t\tdisplay:block;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 > .storeifyapps-form{\r\n\t\tz-index: 2;\r\n\t\tposition: relative;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .storeify-frm-close{\r\n\t\tcolor:#000000;\r\n\t\tz-index:9;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .storeify-title-frm{\r\n\t\tcolor:#000000 !important;\r\n\t\tfont-size: 24px !important;\r\n\t\tline-height: 1;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .storeify-sub-title-frm{\r\n\t\tcolor:#000000 !important;\r\n\t\tfont-size: 14px !important;\r\n\t}\r\n\t\t#storeify-trigger-popup-18060{\r\n\t\tcolor: #FFFFFF !important;\r\n\t\tbackground-color: #000000 !important;\r\n\t\tfont-size: 18px !important;\r\n\t\tmin-height: 30px;\r\n\t}\r\n\t.storeify-btn-trigger-popup.storeify-btn-position-1{\r\n\t\tbottom: 0;\r\n\t\tright: 25px;\r\n\t   \r\n\t}\r\n\t.storeify-btn-trigger-popup.storeify-btn-position-2{\r\n\t\tbottom: 0;\r\n\t\tleft: 25px;\r\n\t}\r\n\t.storeify-btn-trigger-popup.storeify-btn-position-3{\r\n\t\tleft: auto;\r\n\t    right: 0;\r\n\t    transform: translate(-34px, 0) rotate(-90deg);\r\n\t    transform-origin: right top 0;\r\n\t\t-moz-transform: translate(-34px, 0) rotate(-90deg);\r\n\t\t-moz-transform-origin: right top 0;\r\n\t\t-webkit-transform: translate(-34px, 0) rotate(-90deg);\r\n\t\t-webkit-transform-origin: right top 0;\r\n\t    bottom: auto;\r\n\t    top: 35%;\r\n\t}\r\n\t.storeify-btn-trigger-popup.storeify-btn-position-4{\r\n\t\tleft: 0;\r\n\t    right: auto;\r\n\t    transform: translate(34px, 0) rotate(90deg);\r\n\t    transform-origin: left top 0;\r\n\t\t-moz-transform: translate(34px, 0) rotate(90deg);\r\n\t\t-moz-transform-origin: left top 0;\r\n\t\t-webkit-transform: translate(34px, 0) rotate(90deg);\r\n\t\t-webkit-transform-origin: left top 0;\r\n\t    bottom: auto;\r\n\t    top: 35%;\r\n\t   \r\n\t}\r\n\t.storeify-btn-trigger-popup.storeify-btn-style-1{\r\n\t\ttransform: none !important;\r\n\t}\r\n\t\/*#storeify_content_formbuilder_18060 .storeify-select-arrow{\r\n\t\tborder-top: 5px solid #D9D9D9;\r\n\t\tborder-top-color: #D9D9D9;\r\n\t}*\/\r\n\t#storeify_content_formbuilder_18060 .storeify-submit-btn{\r\n\t\tcolor: #FFFFFF !important;\r\n\t\tbackground-color: #05BE70 !important\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .storeify-input-file .btn-ctf-attach{\r\n\t\tcolor: #000000 !important;\r\n\t}\r\n\t#form_attach_file_success_18060 ul{\r\n\t\tdisplay: block;\r\n\t\tlist-style: none;\r\n\t\tpadding: 7px 15px;\r\n\t\tbackground-color:rgba(255,255,255) !important;\r\n\t\tline-height: 1;\r\n\t\tcolor: #676768 !important;\r\n\t\tborder: 1px solid #D9D9D9;\r\n\t\tborder-radius: 5px;\r\n\t\tmargin:5px 0;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .file-error-message{\r\n\t\tmargin:5px 0 !important;\r\n\t\tpadding: 7px 15px !important;\r\n\t}\r\n\t#storeify_content_formbuilder_18060 .kv-error-close{\r\n\t\tmargin-top: -5px;\r\n\t}\r\n\t#form_attach_file_success_18060 ul li{\r\n\t\tdisplay: block;\r\n\t\tpadding: 3px 15px 3px 0;\r\n\t\tposition: relative;\r\n\t}\r\n\t#form_attach_file_success_18060 ul .fa-times{\r\n\t    width: 15px;\r\n\t    height: 15px;\r\n\t    position: absolute;\r\n\t    text-align: center;\r\n\t    line-height: 15px;\r\n\t    top:50%;\r\n\t    margin-top: -7px;\r\n\t    right: 0;\r\n\t    display: block;\r\n\t}\r\n\t\t\tbody .storeify-hide{display: none !important;}\r\n\t#storeify-light-modal-18060.storeify-light-modal .storeify-light-modal-content,\r\n\t#storeify-light-modal-18060.storeify-bubble-modal .storeify-light-modal-content{\r\n\t\twidth: 1300px;\r\n\t}\r\n\t@media  screen and (max-width: 1310px){\r\n\t\t#storeify-light-modal-18060.storeify-light-modal .storeify-light-modal-content,\r\n\t\t#storeify-light-modal-18060.storeify-bubble-modal .storeify-light-modal-content{\r\n\t\t\twidth: auto;\r\n\t\t}\r\n\t}\r\n\t@media  screen and (max-width: 1290px){\r\n\t\t#storeify_content_formbuilder_18060.storeify-formbuilder.info_box_enabled,\r\n\t\t.storeify-light-modal.target{display: block;}\r\n\t\t.storeify-light-modal .storeify-light-modal-content{margin: 0 15px;}\r\n\t\t.storeifyapps-form-18060{width: 100%;float: left;padding: 20px 25px 5px 25px;}\r\n\t\t.storeifyapps-info-18060{width: 100%;float: left;padding: 10px 25px 15px 25px;}\r\n\t\t #storeify_content_formbuilder_18060.storeify-formbuilder.info_box_enabled{overflow-y:auto;} \t}\r\n\t\t#storeify-formbuilder-view-18060{\r\n\t\twidth: 1300px;\r\n\t\tmax-width: 100%;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\t\t\t\t\t\t.storeify-formbuilder .storeify-body-frm{margin-top:0 !important;}\r\n\t\t.storeify-formbuilder {\r\nfont-family: Inter;\r\n}\r\n<\/style>\r\n<div class=\"storeify-formbuilder storeify-frm-type-3  bootstrap-storeifyapps storeify-position-0 \" id=\"storeify_content_formbuilder_18060\">\r\n\t\t\t<div class=\"storeifyapps-form storeifyapps-form-18060\">\r\n\t\t<form class=\"storeify-form-action needs-validation \" id=\"storeify_form_action_18060\" action=\"https:\/\/cf.storeify.app\/formbuilder-send\" method=\"POST\">\r\n\t\t\t<input type=\"hidden\" name=\"_token\" value=\"4b0JExzHTL6OeW10JnowylLt098w3y9Krz965b6m\">\r\n\t\t\t<input type=\"hidden\" name=\"id\" value=\"18060\">\r\n\t\t\t<input type=\"hidden\" name=\"shopify_domain\" value=\"sofanacaixa.myshopify.com\">\r\n\t\t\t<input type=\"hidden\" name=\"shop_email\" value=\"sistemas@ecoflamegarden.com.br\">\r\n\t\t\t<input type=\"hidden\" name=\"send_to\" value=\"contato@sofanacaixa.com.br\">\r\n\t\t\t<input type=\"hidden\" name=\"shop_name\" value=\"Sof\u00e1 na Caixa\">\r\n\t\t\t<input type=\"hidden\" name=\"submit_from\" class=\"submit_from\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"storeify-header-frm storeify-header-frm-text-1 storeify-text-align-1\">\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div><!--end header-->\r\n\t\t\t\t\t\t<div class=\"storeify-body-frm  storeify-label-outline  storeify-input-style-2   storeify-display-icon \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-col-3 out-storeifyInput_name \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"storeify-label-control\" for=\"storeifyInput_name\">Nome completo<span class=\"storeify-required-text\">*<\/span><\/label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-div-input storeify-div-input-type-input-text\">\r\n\t\t\t\t\t\t\t <i class=\"storeify-field-icon fa fa-user-o\"><\/i> \t\t\t\t\t\t\t<input type=\"text\" class=\" storeify-input-control storeify-input-text inter name-field\" placeholder=\"Ex: Jo\u00e3o\" name=\"storeifyInput_name\" id=\"storeifyInput_name\" data-default=\"\" value=\"\"    required=\"required\" >\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-col-3 out-storeifyInput_email \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"storeify-label-control\" for=\"storeifyInput_email\">E-mail<span class=\"storeify-required-text\">*<\/span><\/label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-div-input storeify-div-input-type-email\">\r\n\t\t\t\t\t\t\t <i class=\"storeify-field-icon fa fa-envelope-o\"><\/i> \t\t\t\t\t\t\t<input type=\"email\" class=\" storeify-input-control storeify-email \" placeholder=\"Ex: seuemail@mail.com\" name=\"storeifyInput_email\" id=\"storeifyInput_email\"  data-default=\"\" value=\"\"   required=\"required\" >\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-col-3 out-storeifyInput_ec1ebbee-6933-4393-9e67-6905e0a008ab \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"storeify-label-control\" for=\"storeifyInput_ec1ebbee-6933-4393-9e67-6905e0a008ab\">Telefone<span class=\"storeify-required-text\">*<\/span><\/label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-div-input storeify-div-input-type-input-text\">\r\n\t\t\t\t\t\t\t <i class=\"storeify-field-icon fa fa-phone\"><\/i> \t\t\t\t\t\t\t<input type=\"text\" class=\" storeify-input-control storeify-input-text \" placeholder=\"(00) 90000-0000\" name=\"storeifyInput_ec1ebbee-6933-4393-9e67-6905e0a008ab\" id=\"storeifyInput_ec1ebbee-6933-4393-9e67-6905e0a008ab\" data-default=\"\" value=\"\"    required=\"required\" >\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-col-3 out-storeifyInput_536c5962-2f48-428c-a07b-166545a18e8b \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"storeify-label-control\" for=\"storeifyInput_536c5962-2f48-428c-a07b-166545a18e8b\">CNPJ<\/label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-div-input storeify-div-input-type-input-text\">\r\n\t\t\t\t\t\t\t <i class=\"storeify-field-icon fa fa-user-o\"><\/i> \t\t\t\t\t\t\t<input type=\"text\" class=\" storeify-input-control storeify-input-text \" placeholder=\"Ex: 072.444.222-00\" name=\"storeifyInput_536c5962-2f48-428c-a07b-166545a18e8b\" id=\"storeifyInput_536c5962-2f48-428c-a07b-166545a18e8b\" data-default=\"\" value=\"\"   >\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-col-3 out-storeifyInput_ab9d27e7-2ce2-437e-af41-794807a0b5c8 \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"storeify-label-control\" for=\"storeifyInput_ab9d27e7-2ce2-437e-af41-794807a0b5c8\">CEP (da loja)*<\/label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-div-input storeify-div-input-type-input-text\">\r\n\t\t\t\t\t\t\t <i class=\"storeify-field-icon fa fa-map-marker\"><\/i> \t\t\t\t\t\t\t<input type=\"text\" class=\" storeify-input-control storeify-input-text \" placeholder=\"Ex: 13445-123\" name=\"storeifyInput_ab9d27e7-2ce2-437e-af41-794807a0b5c8\" id=\"storeifyInput_ab9d27e7-2ce2-437e-af41-794807a0b5c8\" data-default=\"\" value=\"\"   >\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t                <div class=\"storeify-frm-group storeify-col-3 out-storeifyInput_4ebf2bcb-327b-4c26-b80d-57ec09cbbb86 \">\r\n\t                    \t                        <label class=\"storeify-label-control\" for=\"storeifyInput_4ebf2bcb-327b-4c26-b80d-57ec09cbbb86\"> Estado<span class=\"storeify-required-text\">*<\/span><\/label>\r\n\t                    \t                    <div class=\"storeify-div-select storeify-div-input\">\r\n\t                     <i class=\"storeify-field-icon fa fa-map-marker\"><\/i> \t                    <select  class=\" storeify-input-control storeify-select\" name=\"storeifyInput_4ebf2bcb-327b-4c26-b80d-57ec09cbbb86\" id=\"storeifyInput_4ebf2bcb-327b-4c26-b80d-57ec09cbbb86\"  data-default=\"\"   required=\"required\" >\r\n\t                    \t                    \t<option value=\"\">Nome do Seu Estado<\/option>\r\n\t                    \t                    \t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Acre\" >AC<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Alagoas\" >Al<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Amap\u00e1\" >AP<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Amazonas\" >AM<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Bahia\" >BA<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Cear\u00e1\" >CE<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Distrito Federal\" >DF<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Esp\u00edrito Santo\" >ES<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Goi\u00e1s\" >GO<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Maranh\u00e3o\" >MA<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Mato Grosso\" >MT<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Mato Grosso da Sul\" >MS<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Minas Gerais\" >MG<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Par\u00e1\" >PA<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Para\u00edba\" >PB<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Paran\u00e1\" >PR<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Pernambuco\" >PE<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Piau\u00ed\" >PI<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Rio de Janeiro\" >RJ<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Rio Grande do Norte\" >RN<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Rio Grande do Sul\" >RS<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Rond\u00f4nia\" >RO<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Roraima\" >RR<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Santa Catarina\" >SC<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"S\u00e3o Paulo\" >SP<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Sergipe\" >SE<\/option>\r\n\t\t                    \t\t                        \r\n\t\t                        <option data-email=\"\" value=\"Tocantins\" >TO<\/option>\r\n\t\t                    \t                    \t                    <\/select>\r\n\t                    <i class=\"storeify-select-arrow\"><\/i>\r\n\t                \t<\/div>\r\n\t                    \t                <\/div>\r\n\t                \r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-col-3 out-storeifyInput_phone \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"storeify-label-control\" for=\"storeifyInput_phone\">Cidade (da loja)*<span class=\"storeify-required-text\">*<\/span><\/label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-div-input storeify-div-input-type-input-text\">\r\n\t\t\t\t\t\t\t <i class=\"storeify-field-icon fa fa-map-marker\"><\/i> \t\t\t\t\t\t\t<input type=\"text\" class=\" storeify-input-control storeify-input-text city-field\" placeholder=\"Nome da sua cidade\" name=\"storeifyInput_phone\" id=\"storeifyInput_phone\" data-default=\"\" value=\"\"    required=\"required\" >\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-col-1 out-storeifyInput_82fcae61-daf2-4137-a654-0f124792fa7e \">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"storeify-label-control\" for=\"storeifyInput_82fcae61-daf2-4137-a654-0f124792fa7e\">Observa\u00e7\u00e3o*<\/label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-div-input storeify-div-input-type-textarea\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<textarea  class=\" storeify-no-icon  storeify-input-control storeify-textarea\" placeholder=\"Digite aqui\"  data-default=\"\" name=\"storeifyInput_82fcae61-daf2-4137-a654-0f124792fa7e\" id=\"storeifyInput_82fcae61-daf2-4137-a654-0f124792fa7e\"  ><\/textarea>\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"storeify-frm-group storeify-multi-input storeify-col-1 out-storeifyInput_b4795a67-d717-4fba-9671-4f37933afcee \"  data-default=\"\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t                    \t                    <div class=\"storeify-div-input storeify-div-input-type-checkbox\"> \r\n\t                    \t                   \t\t\t                        <div class=\"storeify-form-checkbox choose_display_1\">\r\n\t                            <input class=\"storeify-checkbox-input ify-checkbox-storeifyInput_b4795a67-d717-4fba-9671-4f37933afcee checkbox-consent\" type=\"checkbox\" value=\"Ao clicar em Enviar, eu declaro que todas as informa\u00e7\u00f5es fornecidas s\u00e3o verdadeiras e que estou ciente das condi\u00e7\u00f5es de participa\u00e7\u00e3o, incluindo a cess\u00e3o de uso de imagem por tempo indeterminado.\" id=\"storeifyInput_b4795a67-d717-4fba-9671-4f37933afcee\" name=\"storeifyInput_b4795a67-d717-4fba-9671-4f37933afcee\"    required=\"required\"  \/>\r\n\t                            <label class=\"storeify-checkbox-label\" for=\"storeifyInput_b4795a67-d717-4fba-9671-4f37933afcee\">Ao clicar em Enviar, eu declaro que todas as informa\u00e7\u00f5es fornecidas s\u00e3o verdadeiras e que estou ciente das condi\u00e7\u00f5es de participa\u00e7\u00e3o, incluindo a cess\u00e3o de uso de imagem por tempo indeterminado.<\/label>\r\n\t                        <\/div>\r\n\t                    \t                \t<\/div>\r\n\t                \t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"validation_rules\" class=\"validation_rules\" value='{&quot;storeifyInput_email&quot;:{email: true,},}'>\r\n\t\t\t\t<input type=\"hidden\" name=\"validation_mess\" class=\"validation_mess\" value='{&quot;storeifyInput_name&quot;:{required:&quot;campo obrigat\u00f3rio&quot;,},&quot;storeifyInput_email&quot;:{required:&quot;capo obrigat\u00f3rio&quot;,email:&quot;Por favor preencha um email v\u00e1lido&quot;,},&quot;storeifyInput_ec1ebbee-6933-4393-9e67-6905e0a008ab&quot;:{required:&quot;campo obrigat\u00f3rio&quot;,},&quot;storeifyInput_4ebf2bcb-327b-4c26-b80d-57ec09cbbb86&quot;:{required:&quot;campo obrigat\u00f3rio&quot;,},&quot;storeifyInput_phone&quot;:{required:&quot;campo obrigat\u00f3rio&quot;,},&quot;storeifyInput_b4795a67-d717-4fba-9671-4f37933afcee&quot;:{required:&quot;campo obrigat\u00f3rio&quot;,},}'>\r\n\t\t\t\t<script type=\"text\/javascript\">\r\n\t\t\t\t\tvar storeifyValidate = storeifyValidate||{};\r\n\t\t\t\t\tstoreifyValidate[18060] = {\r\n\t\t\t\t\t\t'rules' : {\"storeifyInput_email\":{email: true,},},\r\n\t\t\t\t\t\t'mes' : {\"storeifyInput_name\":{required:\"campo obrigat\u00f3rio\",},\"storeifyInput_email\":{required:\"capo obrigat\u00f3rio\",email:\"Por favor preencha um email v\u00e1lido\",},\"storeifyInput_ec1ebbee-6933-4393-9e67-6905e0a008ab\":{required:\"campo obrigat\u00f3rio\",},\"storeifyInput_4ebf2bcb-327b-4c26-b80d-57ec09cbbb86\":{required:\"campo obrigat\u00f3rio\",},\"storeifyInput_phone\":{required:\"campo obrigat\u00f3rio\",},\"storeifyInput_b4795a67-d717-4fba-9671-4f37933afcee\":{required:\"campo obrigat\u00f3rio\",},},\r\n\t\t\t\t\t};\r\n\t\t\t\t<\/script>\r\n\t\t\t<\/div><!--end body-->\r\n\t\t\t<div class=\"storeify-foooter-frm storeify-text-align-2\">\r\n\t\t\t\t<button class=\"storeify-submit-frm storeify-submit-btn storeify-submit-style-2\" >INSCREVER-SE<\/button>\r\n\t\t\t<\/div><!--end footer-->\r\n\t\t<\/form>\r\n\r\n\t\t<div class=\"storeify-formbuilder-mes\" style=\"display: none;\"><\/div>\r\n\t<\/div>\r\n\t\r\n\t\r\n<\/div>\r\n\r\n<script type=\"text\/javascript\">\r\njQuery(document).ready(function($){\r\nfunction checkinArray18060(value, array, type,logic){\r\n\t\tif(type == 'radio'){\r\n\t\t\tif(value != '' && $.inArray(value,array) != -1){\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(type == 'checkbox'){\r\n\t\t\t$checked = 1;\r\n\t\t\tif(value.length > 0){\r\n\t\t\t\t$.each(value, function( i, val ) {\r\n\t\t\t\t \tif($.inArray(val,array) == -1){\r\n\t\t\t\t \t\t$checked = 0;\r\n\t\t\t\t \t\treturn false;\r\n\t\t\t\t \t}\r\n\r\n\t\t\t\t});\r\n\t\t\t\tif($checked == 1)\r\n\t\t\t\t\treturn true;\r\n\t\t\t\telse\r\n\t\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn logic;\r\n}\r\nfunction chekCompare18060(inputs,param,check){\r\n\tif(inputs.length > 0){\r\n\t\t$checked = 1;\r\n\t\t$.each(inputs, function( i, val ) {\r\n\t\t\tif(check == true){\r\n\t\t\t\tif(val < param){\r\n\t\t\t \t\tconsole.log(val +'<'+ param)\r\n\t\t\t \t\t$checked = 0;\r\n\t\t\t\t\treturn false;\r\n\t\t\t \t}\r\n\t\t\t}else{\r\n\t\t\t\tif(val > param){\r\n\t\t\t\t\tconsole.log(val +'>'+ param)\r\n\t\t\t \t\t$checked = 0;\r\n\t\t\t\t\treturn false;\r\n\t\t\t \t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif($checked == 1)\r\n\t\t\treturn true;\r\n\t\telse\r\n\t\t\treturn false;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n});\r\n<\/script>","show_all":1,"pages":[],"products":[],"collections":[],"step_enabled":0,"text_buton":{"next_button":"Next","previous_button":"Previous","submit_button":"INSCREVER-SE"},"upload":{"upload":0,"attachfile_required":0,"upload_label":"Attach File","upload_url":"https:\/\/cf.storeify.app\/contact\/upload-file"}}]}"; var ify_fileExtensions = "WyJqcGciLCJnaWYiLCJwbmciLCJqcGVnIiwidGlmZiIsInR4dCIsIm1wMyIsIm1wNCIsInppcCIsImRvYyIsImRvY3giLCJjc3YiLCJ4bHMiLCJ4bHN4IiwicHB0IiwicGRmIiwicHNkIiwic3ZnIiwiZXNwIiwiYWkiXQ==";